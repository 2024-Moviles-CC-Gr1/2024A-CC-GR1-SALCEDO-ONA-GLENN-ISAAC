// Generated by view binder compiler. Do not edit!
package com.example.libreria.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.libreria.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStatscrudBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnActualizarBdd;

  @NonNull
  public final Button btnBuscarBdd;

  @NonNull
  public final Button btnCrearBdd;

  @NonNull
  public final Button btnEliminarBdd;

  @NonNull
  public final CheckBox chkLucky;

  @NonNull
  public final ConstraintLayout clStats;

  @NonNull
  public final EditText inputAtk;

  @NonNull
  public final EditText inputDef;

  @NonNull
  public final EditText inputGuild;

  @NonNull
  public final EditText inputSpeed;

  @NonNull
  public final EditText inputStatsID;

  @NonNull
  public final TextView txtCrudStats;

  private ActivityStatscrudBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnActualizarBdd, @NonNull Button btnBuscarBdd, @NonNull Button btnCrearBdd,
      @NonNull Button btnEliminarBdd, @NonNull CheckBox chkLucky, @NonNull ConstraintLayout clStats,
      @NonNull EditText inputAtk, @NonNull EditText inputDef, @NonNull EditText inputGuild,
      @NonNull EditText inputSpeed, @NonNull EditText inputStatsID,
      @NonNull TextView txtCrudStats) {
    this.rootView = rootView;
    this.btnActualizarBdd = btnActualizarBdd;
    this.btnBuscarBdd = btnBuscarBdd;
    this.btnCrearBdd = btnCrearBdd;
    this.btnEliminarBdd = btnEliminarBdd;
    this.chkLucky = chkLucky;
    this.clStats = clStats;
    this.inputAtk = inputAtk;
    this.inputDef = inputDef;
    this.inputGuild = inputGuild;
    this.inputSpeed = inputSpeed;
    this.inputStatsID = inputStatsID;
    this.txtCrudStats = txtCrudStats;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStatscrudBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStatscrudBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_statscrud, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStatscrudBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_actualizar_bdd;
      Button btnActualizarBdd = ViewBindings.findChildViewById(rootView, id);
      if (btnActualizarBdd == null) {
        break missingId;
      }

      id = R.id.btn_buscar_bdd;
      Button btnBuscarBdd = ViewBindings.findChildViewById(rootView, id);
      if (btnBuscarBdd == null) {
        break missingId;
      }

      id = R.id.btn_crear_bdd;
      Button btnCrearBdd = ViewBindings.findChildViewById(rootView, id);
      if (btnCrearBdd == null) {
        break missingId;
      }

      id = R.id.btn_eliminar_bdd;
      Button btnEliminarBdd = ViewBindings.findChildViewById(rootView, id);
      if (btnEliminarBdd == null) {
        break missingId;
      }

      id = R.id.chk_lucky;
      CheckBox chkLucky = ViewBindings.findChildViewById(rootView, id);
      if (chkLucky == null) {
        break missingId;
      }

      ConstraintLayout clStats = (ConstraintLayout) rootView;

      id = R.id.input_atk;
      EditText inputAtk = ViewBindings.findChildViewById(rootView, id);
      if (inputAtk == null) {
        break missingId;
      }

      id = R.id.input_def;
      EditText inputDef = ViewBindings.findChildViewById(rootView, id);
      if (inputDef == null) {
        break missingId;
      }

      id = R.id.input_guild;
      EditText inputGuild = ViewBindings.findChildViewById(rootView, id);
      if (inputGuild == null) {
        break missingId;
      }

      id = R.id.input_speed;
      EditText inputSpeed = ViewBindings.findChildViewById(rootView, id);
      if (inputSpeed == null) {
        break missingId;
      }

      id = R.id.input_statsID;
      EditText inputStatsID = ViewBindings.findChildViewById(rootView, id);
      if (inputStatsID == null) {
        break missingId;
      }

      id = R.id.txt_crudStats;
      TextView txtCrudStats = ViewBindings.findChildViewById(rootView, id);
      if (txtCrudStats == null) {
        break missingId;
      }

      return new ActivityStatscrudBinding((ConstraintLayout) rootView, btnActualizarBdd,
          btnBuscarBdd, btnCrearBdd, btnEliminarBdd, chkLucky, clStats, inputAtk, inputDef,
          inputGuild, inputSpeed, inputStatsID, txtCrudStats);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
