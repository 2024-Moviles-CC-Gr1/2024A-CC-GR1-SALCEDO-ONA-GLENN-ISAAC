// Generated by view binder compiler. Do not edit!
package com.example.libreria.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.libreria.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCharactercrudBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnActualizarBdd;

  @NonNull
  public final Button btnBuscarBdd;

  @NonNull
  public final Button btnCrearBdd;

  @NonNull
  public final Button btnEliminarBdd;

  @NonNull
  public final CheckBox chkPlayable;

  @NonNull
  public final ConstraintLayout clCharacter;

  @NonNull
  public final EditText inputAge;

  @NonNull
  public final EditText inputBirthday;

  @NonNull
  public final EditText inputDifficulty;

  @NonNull
  public final EditText inputGender;

  @NonNull
  public final EditText inputId;

  @NonNull
  public final EditText inputName;

  @NonNull
  public final TextView txtCrudCharacter;

  private ActivityCharactercrudBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnActualizarBdd, @NonNull Button btnBuscarBdd, @NonNull Button btnCrearBdd,
      @NonNull Button btnEliminarBdd, @NonNull CheckBox chkPlayable,
      @NonNull ConstraintLayout clCharacter, @NonNull EditText inputAge,
      @NonNull EditText inputBirthday, @NonNull EditText inputDifficulty,
      @NonNull EditText inputGender, @NonNull EditText inputId, @NonNull EditText inputName,
      @NonNull TextView txtCrudCharacter) {
    this.rootView = rootView;
    this.btnActualizarBdd = btnActualizarBdd;
    this.btnBuscarBdd = btnBuscarBdd;
    this.btnCrearBdd = btnCrearBdd;
    this.btnEliminarBdd = btnEliminarBdd;
    this.chkPlayable = chkPlayable;
    this.clCharacter = clCharacter;
    this.inputAge = inputAge;
    this.inputBirthday = inputBirthday;
    this.inputDifficulty = inputDifficulty;
    this.inputGender = inputGender;
    this.inputId = inputId;
    this.inputName = inputName;
    this.txtCrudCharacter = txtCrudCharacter;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCharactercrudBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCharactercrudBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_charactercrud, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCharactercrudBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_actualizar_bdd;
      Button btnActualizarBdd = ViewBindings.findChildViewById(rootView, id);
      if (btnActualizarBdd == null) {
        break missingId;
      }

      id = R.id.btn_buscar_bdd;
      Button btnBuscarBdd = ViewBindings.findChildViewById(rootView, id);
      if (btnBuscarBdd == null) {
        break missingId;
      }

      id = R.id.btn_crear_bdd;
      Button btnCrearBdd = ViewBindings.findChildViewById(rootView, id);
      if (btnCrearBdd == null) {
        break missingId;
      }

      id = R.id.btn_eliminar_bdd;
      Button btnEliminarBdd = ViewBindings.findChildViewById(rootView, id);
      if (btnEliminarBdd == null) {
        break missingId;
      }

      id = R.id.chk_playable;
      CheckBox chkPlayable = ViewBindings.findChildViewById(rootView, id);
      if (chkPlayable == null) {
        break missingId;
      }

      ConstraintLayout clCharacter = (ConstraintLayout) rootView;

      id = R.id.input_age;
      EditText inputAge = ViewBindings.findChildViewById(rootView, id);
      if (inputAge == null) {
        break missingId;
      }

      id = R.id.input_birthday;
      EditText inputBirthday = ViewBindings.findChildViewById(rootView, id);
      if (inputBirthday == null) {
        break missingId;
      }

      id = R.id.input_difficulty;
      EditText inputDifficulty = ViewBindings.findChildViewById(rootView, id);
      if (inputDifficulty == null) {
        break missingId;
      }

      id = R.id.input_gender;
      EditText inputGender = ViewBindings.findChildViewById(rootView, id);
      if (inputGender == null) {
        break missingId;
      }

      id = R.id.input_id;
      EditText inputId = ViewBindings.findChildViewById(rootView, id);
      if (inputId == null) {
        break missingId;
      }

      id = R.id.input_name;
      EditText inputName = ViewBindings.findChildViewById(rootView, id);
      if (inputName == null) {
        break missingId;
      }

      id = R.id.txt_crudCharacter;
      TextView txtCrudCharacter = ViewBindings.findChildViewById(rootView, id);
      if (txtCrudCharacter == null) {
        break missingId;
      }

      return new ActivityCharactercrudBinding((ConstraintLayout) rootView, btnActualizarBdd,
          btnBuscarBdd, btnCrearBdd, btnEliminarBdd, chkPlayable, clCharacter, inputAge,
          inputBirthday, inputDifficulty, inputGender, inputId, inputName, txtCrudCharacter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
